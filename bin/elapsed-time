#!/bin/bash
#
# Run:
#       cmd args...
# As passed to this wrapper.
#
# Example:
#   elapsed-time some command ... >> some.log
#
# Capture (user, system, overall) time it took to run &
# echo it to STDOUT with TAB separators
#
TIME_FORMAT="%Uu %Ss %e %P"

#
# Make sure all needed files are in the buffer cache:
#
for arg in "$@"; do
    if [[ -e "$arg" ]]; then
        cat "$arg" > /dev/null
        cp "$arg" /dev/null
    fi
done
cat /usr/bin/time "$(which perl)" > /dev/null

#
# Time the command & post-process the timing part so it can be logged
#
TIME=$TIME_FORMAT /usr/bin/time "$@" 2>&1 |
# -- post-processing of timing-data
perl -ne '
    # so we can see what is going on (stderr is uncaptured)
    print STDERR $_;
    if (/^([\d.]+)u\s+([\d.]+)s\s+([\d.]+)\s+([\d.]+)/o) {
        # timestamp, benchmark timing and full command captured+ logged
        print STDOUT "$1\t$2\t$3\t$4\n";
    }
'
